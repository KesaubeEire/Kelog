<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css on Kesa-Kelog</title>
    <link>/categories/css/</link>
    <description>Recent content in Css on Kesa-Kelog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/css/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>⭐️Tech#重学CSS_02</title>
      <link>/2018/03/16/tech-css-02/</link>
      <pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/03/16/tech-css-02/</guid>
      <description>写在前面 目前没有想好多长时间换一次这个版面
大概是一周新开一个CSS的网页吧
那么我就得赶快搞出来咯
基于Tag或者自己往进填链接的方式
估计也就是大概在两周之内学到那个部分吧
噶油
重点提点  CSS的垂直居中问题
日志 18.3.21 end at 183
 数组  &amp;ldquo;以左方括号[开始定义一个数组，以右方括号]结束定义，并把每个条目之间用逗号隔开&amp;rdquo;
var sandwich = [&amp;quot;peanut butter&amp;quot;, &amp;quot;jelly&amp;quot;, &amp;quot;bread&amp;quot;] 多维数组即 [[23],[12],[312],[[21],[321]]]酱紫的 数组是可变的(这里和python一模一样) 数组的栈和队列  将数据推入数组的最后一位 array.push(); 将数据最后一个数据推出,有被推出数据的返回值 array.pop(); 将数据推入数组的第一位 array.unshift(); 将数据第一个数据推出,有被推出数据的返回值 array.shift();   函数
 创建和调用 控制台输出 console.log(contents); 全局变量 和 局部变量
 函数外的变量 和 函数内没经过 var 声明的变量都是全局变量
 还有一种方式:使用window全局对象来声明，全局对象的属性对应也是全局变量，详细如下：
window.test; window.test = 5;  aha
  函数内的 var 声明的变量是 局部变量</description>
    </item>
    
    <item>
      <title>⭐️Tech#重学CSS_01</title>
      <link>/2018/03/12/tech-css/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/03/12/tech-css/</guid>
      <description>飞到日志部分
补充 因为学的东西越来越多了
所以不得已学着以往所有的Bloger一样
分开篇章
但是现在还是没有做好侧边栏
所以可能目前想看到不是那么容易
写在前面 重学系列第三弹
哈哈挖坑好多啊
我也不知道为什么这么喜欢挖坑咯
大概是因为我喜欢倒腾着学习形式的变化吧
从一开始的额word总结,到MindNode
再到网页总结方式
越来越多的方式总有一个目的
我想记录
哈哈还是表现欲 &amp;amp; 记录欲的结合呢
加油啦Kesa!
重点  jQuery 的玩法和 Animate的动画 Font Awesome 这个方便的图标库 Bootstrap 的 btn 属性 和 颜色相关的几个 class值 记一个 css 样式优先级的顺序  最弱: 最上面个的 css next: 往后的 css ,若 class 均在同一个对象中出现(与放置顺序无关),越往后的会覆盖掉前面的 next: id id 永远比 class 优先级高 next: 行内 style , 这个比前两者都高  &amp;lt;style&amp;gt; body { background-color: black; font-family: Monospace; color: green; } .</description>
    </item>
    
  </channel>
</rss>