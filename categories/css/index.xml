<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css on Kesa-Kelog</title>
    <link>/categories/css/</link>
    <description>Recent content in Css on Kesa-Kelog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/css/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>⭐️Tech#重学CSS_02</title>
      <link>/2018/03/16/tech-css-02/</link>
      <pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/03/16/tech-css-02/</guid>
      <description>写在前面 目前没有想好多长时间换一次这个版面
大概是一周新开一个CSS的网页吧
那么我就得赶快搞出来咯
基于Tag或者自己往进填链接的方式
估计也就是大概在两周之内学到那个部分吧
噶油
重点提点  CSS的垂直居中问题
日志 18.3.20 end at 172
 一大堆各种初级语法的学习,略  转义 字符串  +号 连接 .length 字符串长度 JS只有字符串类型,没有字符类型,获取字符使用&amp;rdquo;字符串变量[索引]&amp;ldquo;的形式 字符串不可变,不能利用索引更改某个索引的值来改变整个字符串,改变整个字符串的唯一方法是重新赋值给该字符串变量  数组  &amp;ldquo;以左方括号[开始定义一个数组，以右方括号]结束定义，并把每个条目之间用逗号隔开&amp;rdquo;
var sandwich = [&amp;quot;peanut butter&amp;quot;, &amp;quot;jelly&amp;quot;, &amp;quot;bread&amp;quot;] 多维数组即 [[23],[12],[312],[[21],[321]]]酱紫的    18.3.19 正式开始学习JS
 JS  注释: //(单行) &amp;amp; /**/(多行) 数据类型  undefined（未定义）
null（空）
boolean（布尔型）
string（字符串）
symbol(符号)
number（数字）
object（对象）
  变量 var  类型: 命名:Variable(变量)的名字可以由数字、字母、$或者 _组成,但是不能包含空格或者以数字为首。 各种加减乘除余数 += -= *= /=    18.</description>
    </item>
    
    <item>
      <title>⭐️Tech#重学CSS_01</title>
      <link>/2018/03/12/tech-css/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/03/12/tech-css/</guid>
      <description>飞到日志部分
补充 因为学的东西越来越多了
所以不得已学着以往所有的Bloger一样
分开篇章
但是现在还是没有做好侧边栏
所以可能目前想看到不是那么容易
写在前面 重学系列第三弹
哈哈挖坑好多啊
我也不知道为什么这么喜欢挖坑咯
大概是因为我喜欢倒腾着学习形式的变化吧
从一开始的额word总结,到MindNode
再到网页总结方式
越来越多的方式总有一个目的
我想记录
哈哈还是表现欲 &amp;amp; 记录欲的结合呢
加油啦Kesa!
重点  jQuery 的玩法和 Animate的动画 Font Awesome 这个方便的图标库 Bootstrap 的 btn 属性 和 颜色相关的几个 class值 记一个 css 样式优先级的顺序  最弱: 最上面个的 css next: 往后的 css ,若 class 均在同一个对象中出现(与放置顺序无关),越往后的会覆盖掉前面的 next: id id 永远比 class 优先级高 next: 行内 style , 这个比前两者都高  &amp;lt;style&amp;gt; body { background-color: black; font-family: Monospace; color: green; } .</description>
    </item>
    
  </channel>
</rss>